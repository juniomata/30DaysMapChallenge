# -*- coding: utf-8 -*-
"""day26_mapProjections.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11zucfgWSaAEtIxgFvtL7Qwd64_XtHayR
"""

import matplotlib.pyplot as plt
import numpy as np
import xarray as xr
import cartopy.crs as ccrs
from matplotlib.font_manager import FontProperties
from PIL import Image, ImageOps, ImageDraw, ImageFont
import requests
import textwrap

# Function to download and save fonts
def download_font(url, path):
    with open(path, "wb") as file:
        file.write(requests.get(url).content)

# Function to wrap text
def wrap_text(text, width):
    return "\n".join(textwrap.wrap(text, width=width))

# Font URLs and paths
font_urls = {
    "title": "https://github.com/google/fonts/raw/main/ofl/merriweather/Merriweather-Bold.ttf",
    "desc": "https://github.com/google/fonts/raw/main/ofl/lato/Lato-Regular.ttf",
    "footer": "https://github.com/google/fonts/raw/main/ofl/lato/Lato-Light.ttf",
}
font_paths = {
    "title": "Merriweather-Bold.ttf",
    "desc": "Lato-Regular.ttf",
    "footer": "Lato-Light.ttf",
}

# Download fonts
for font_type, url in font_urls.items():
    download_font(url, font_paths[font_type])

# Font properties for Matplotlib
title_font = FontProperties(fname=font_paths["title"], size=25)
subtitle_font = FontProperties(fname=font_paths["desc"], size=20)
body_font = FontProperties(fname=font_paths["desc"], size=14)

# File paths for datasets
files = {
    "winter": "amaps_18801900_20042024_1winter.nc",
    "spring": "amaps_18801900_20042024_2spring.nc",
    "summer": "amaps_18801900_20042024_3summer.nc",
    "fall": "amaps_18801900_20042024_4fall.nc",
}

# Projections for each season
projections = {
    "winter": ccrs.PlateCarree(),
    "spring": ccrs.Mollweide(),
    "summer": ccrs.Robinson(),
    "fall": ccrs.AlbersEqualArea(),
}

# Load data
seasonal_data = {
    season: {
        "lons": xr.open_dataset(file)["lon"].values,
        "lats": xr.open_dataset(file)["lat"].values,
        "temp_anomaly": xr.open_dataset(file)["TEMPANOMALY"].values,
    }
    for season, file in files.items()
}

# Create temperature anomaly plots
fig = plt.figure(figsize=(20, 10))
clevs = np.arange(-5, 6)
cmap = "coolwarm"

seasons = ["winter", "spring", "summer", "fall"]
for i, season in enumerate(seasons, start=1):
    data = seasonal_data[season]
    ax = fig.add_subplot(2, 2, i, projection=projections[season])
    cf = ax.contourf(
        data["lons"], data["lats"], data["temp_anomaly"],
        levels=clevs, transform=ccrs.PlateCarree(), cmap=cmap, extend="both"
    )
    ax.gridlines(linestyle="--", color="grey", alpha=0.2)
    ax.coastlines(resolution="110m", lw=0.55)
    ax.set_xticks([])
    ax.set_yticks([])
    ax.set_title(season.capitalize(), fontproperties=subtitle_font)

# Add colorbar
cbar_ax = fig.add_axes([0.2, 0.02, 0.6, 0.02])
cb = fig.colorbar(cf, cax=cbar_ax, orientation="horizontal", ticks=clevs)
cb.set_label("Temperature Anomaly (°C)", fontproperties=body_font)
cb.ax.tick_params(labelsize=10)
for tick_label in cb.ax.get_xticklabels():
    tick_label.set_fontproperties(body_font)

# Save plot
map_filename = "nowadays_temp_anomalies_vs_preindustrial_raw.png"
plt.savefig(map_filename, bbox_inches="tight", dpi=300)
plt.close()

# Post-process with PIL for layout
map_image = Image.open(map_filename)
padding = (400, 800, 400, 400)  # (left, top, right, bottom)
padded_image = ImageOps.expand(map_image, border=padding, fill="white")

# Load fonts for PIL
pil_fonts = {
    "title": ImageFont.truetype(font_paths["title"], size=150),
    "desc": ImageFont.truetype(font_paths["desc"], size=75),
    "footer": ImageFont.truetype(font_paths["footer"], size=50),
}

# Create a drawing context
draw = ImageDraw.Draw(padded_image)

# Add title
title_text = (
    "Global Seasonal Temperature Anomaly (°C) for The Last 20 Years\n"
    "Relative to Pre-Industrial Average (1880-1900)"
)
draw.multiline_text(
    (padded_image.width // 2, 300),
    title_text,
    font=pil_fonts["title"],
    fill="black",
    anchor="mm",
    align="center",
)

# Add wrapped description
description_text = (
    "This visualization displays the seasonal temperature anomalies for the last 20 years (2004-2024) compared to the "
    "Pre-industrial average (1881-1900). The maps display how winter, spring, summer, and fall experienced "
    "temperature deviations across the globe, with notable warming trends in the Northern Hemisphere. "
    "Different map projections were applied for each season to provide diverse perspectives on the spatial "
    "distribution of temperature changes."
)
wrapped_description = wrap_text(description_text, width=160)
draw.multiline_text(
    (padded_image.width // 2, 600),
    wrapped_description,
    font=pil_fonts["desc"],
    fill="black",
    anchor="mm",
    align="center",
)

# Add footer
footer_text = (
    "Data: NASA GISS\n"
    "©2025 Godfried Junio Matahelemual\n"
    "#30DaysMapChallenge - Day 26 Map Projections"
)
draw.multiline_text(
    (padded_image.width - 200, padded_image.height - 400),
    footer_text,
    font=pil_fonts["footer"],
    fill="black",
    anchor="ra",
    align="right",
)

# Save final image
final_output = "day26_nowadays_temp_anomalies_vs_preindustrial.png"
padded_image.save(final_output)

# Display the final image
padded_image